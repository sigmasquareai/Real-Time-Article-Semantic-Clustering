version: "3.8"

networks:
  monitor-net:
    driver: bridge
    ipam:
      config:
        - subnet: "172.20.0.0/24"

services:
  
  mlserver:
    build:
        context: ./ML_Server
        dockerfile: Dockerfile
    container_name: mlserver
    ports:
        - 8900:8585
    networks:
        - monitor-net
    depends_on:
        - milvusdb
    command: uvicorn main:app --port=8585 --host=0.0.0.0 --reload
    restart: always
  
  mlclient:
    build:
        context: ./ML_Client
        dockerfile: Dockerfile
    container_name: mlclient
    volumes:
        - ./ML_Client/app:/app
    command: bash app.sh
    env_file:
        - ./ML_Client/.env
    depends_on:
        - mlserver
    networks:
        - monitor-net
    restart: always

  milvusdb:
    image: milvusdb/milvus:cpu-latest
    container_name: milvusdb
    volumes:
        - ./milvus/db:/var/lib/milvus/db
        - ./milvus/conf:/var/lib/milvus/conf
        - ./milvus/logs:/var/lib/milvus/logs
        - ./milvus/wal:/var/lib/milvus/wal
    ports:
        - 19530:19530
        - 19121:19121
    depends_on:
        - prometheus
    networks:
        monitor-net:
            ipv4_address: 172.20.0.5
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
        - 9090:9090
    volumes:
        - ./promstack/prometheus:/etc/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    depends_on:
        - pushgateway
    networks:
        - monitor-net
    restart: always

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
        - 9091:9091
    networks:
        monitor-net:
            ipv4_address: 172.20.0.7
    restart: always
  
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./promstack/alertmanager:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
        - monitor-net
    depends_on:
        - pushgateway
    restart: always
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
        - 3000:3000
    networks:
        - monitor-net
    depends_on:
        - milvusdb
    restart: always